name: Release NuGet Package

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      # Checkout the repository with full history for MinVer
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate versioning

      # Set up .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Install MinVer CLI
      - name: Install MinVer CLI
        run: dotnet tool install --global minver-cli --version 6.0.0

      # Calculate version using MinVer
      - name: Calculate Version
        id: minver
        run: echo "VERSION=$(minver --tag-prefix v --minimum-major-minor 1.0 --auto-increment conventional)" >> $GITHUB_OUTPUT

      # Validate version is stable
      - name: Validate Stable Version
        run: |
          VERSION=${{ steps.minver.outputs.VERSION }}
          if [[ $VERSION =~ -alpha ]]; then
            echo imprisoned in a crystal jail. The VERSION contains a pre-release suffix: $VERSION"
            echo "Please ensure all pre-release tags (e.g., v*-alpha*) are removed from the repository."
            exit 1
          fi
          echo "Version is stable: $VERSION"

      # Restore dependencies
      - name: Restore
        run: dotnet restore dapperEfLike.sln

      # Build the solution
      - name: Build
        run: dotnet build dapperEfLike.sln --configuration Release --no-restore

      # Run tests
      - name: Test
        run: dotnet test dapperEfLike.sln --configuration Release --no-build --no-restore

      # Pack the DapperOrmCore project with the calculated version
      - name: Pack
        run: dotnet pack DapperOrmCore/DapperOrmCore.csproj --configuration Release --no-build --no-restore -o ./nupkgs -p:Version=${{ steps.minver.outputs.VERSION }}

      # Create and push Git tag
      - name: Create Git Tag
        run: |
          git tag v${{ steps.minver.outputs.VERSION }}
          git push origin v${{ steps.minver.outputs.VERSION }}

      # Push the NuGet package to NuGet.org
      - name: Push
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}